{"version":3,"sources":["components/Navbar.tsx","pages/HomePage.tsx","pages/ErrorPage.tsx","api.ts","components/Loader/Loader.tsx","utils/filteredPeople.ts","utils/convertCentury.ts","utils/sortedPeople.ts","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/PersonLink/PersonLink.tsx","enums/tableTitles.ts","components/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navbar","useSearchParams","searchParams","className","role","isActive","classNames","to","pathname","search","toString","HomePage","ErrorPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","getFilteredPeople","people","query","sex","centuries","filter1","filter","person","name","toLocaleLowerCase","includes","motherName","fatherName","length","flatMap","century","year","born","Math","ceil","getSortedPeople","sortName","arr","sortN","direction","sort","s1","s2","localeCompare","dir","n1","n2","sortByNumber","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","PeopleFilters","setSearchParams","get","getAll","setSearchWith","placeholder","onChange","e","target","map","onClick","ch","newCenturies","letter","toggleCenturies","href","PersonLink","peoples","slug","useParams","hasFather","find","parent","hasMather","died","TableTitles","PeopleTable","order","handleClick","parentEl","currentTarget","parentElement","textContent","Boolean","values","el","style","color","cursor","PeoplePage","useState","setPeoples","visiblePeople","setVisiblePeople","isError","setIsError","isLoading","setIsLoading","num","useEffect","res","catch","finally","filteredPeople","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"gRAGaA,EAAS,WACpB,MAAuBC,cAAhBC,EAAP,oBAEA,OACE,qBACE,UAAQ,MACRC,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,8BAA+BD,GADtB,EAGXE,GAAG,IAJL,kBASA,cAAC,IAAD,CACEJ,UAAW,gBAAGE,EAAH,EAAGA,SAAH,OAAkBC,IAAW,cAAe,CACrD,8BAA+BD,GADtB,EAGXE,GAAI,CAAEC,SAAU,UAAWC,OAAQP,EAAaQ,YAJlD,0BAYT,ECpCYC,EAAW,kBACtB,oBAAIR,UAAU,QAAd,sBADsB,ECAXS,EAAY,kBACvB,oBAAIT,UAAU,QAAd,2BADuB,E,OCSlB,SAASU,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKnB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECCToB,EAAoB,SAC/BC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAUJ,EACbK,QAAO,SAAAC,GAAM,eAAIA,EAAOC,KAAKC,oBAC3BC,SAASR,EAAMO,uBADA,UAEbF,EAAOI,kBAFM,aAEb,EAAmBF,oBACnBC,SAASR,EAAMO,wBAHF,UAIbF,EAAOK,kBAJM,aAIb,EAAmBH,oBACnBC,SAASR,EAAMO,qBALN,IAMbH,QAAO,SAAAC,GAAM,OAAIA,EAAOJ,IAAIO,SAASP,EAAxB,IAEhB,OAAIC,EAAUS,OACLT,EAAUU,SAAQ,SAAAC,GAAO,OAAIV,EACjCC,QAAO,SAAAC,GAAM,OCnBL,KADYS,EDoBQT,EAAOU,MClB/B,EAGFC,KAAKC,KAAKH,EAAO,QDe0BD,ECpB1B,IAACC,CDoBP,GADgB,IAI3BX,CACR,E,OErBYe,EAAkB,SAC7BnB,EACAoB,GAEI,IAWkBC,EAAeC,EAZrCC,EACG,uDADwB,KAsB3B,OAAQH,GACN,IAAK,OACL,IAAK,MACH,OAbkBC,EAaErB,EAbasB,EAaLF,EAAUG,EAX/B,YAAIF,GAAKG,MAAK,SAACC,EAAIC,GAAL,OAAaA,EAAGJ,GAClCK,cAAeF,EAAGH,GADA,IAGd,YAAID,GAAKG,MAAK,SAACC,EAAIC,GAAL,OAAaD,EAAGH,GAClCK,cAAeD,EAAGJ,GADA,IAUvB,IAAK,OACL,IAAK,OACH,OA3BiB,SAACD,EAAeC,EAAeM,GAClD,OAAIA,EACK,YAAIP,GAAKG,MAAK,SAACK,EAAIC,GAAL,OAAaA,EAAGR,GAClCO,EAAGP,EADe,IAGd,YAAID,GAAKG,MAAK,SAACK,EAAIC,GAAL,OAAaD,EAAGP,GAChCQ,EAAGR,EADa,GAGxB,CAmBUS,CAAa/B,EAAQoB,EAAUG,GAExC,QACE,OAAOvB,EAEZ,EChCM,SAASgC,EACdC,EACAC,GAGA,IAAMC,EAAY,IAAIC,gBACpBH,EAAc/C,YA+BhB,OAjBAmD,OAAOC,QAAQJ,GACZK,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KACX,OAAVA,EACFN,EAAUO,OAAOF,GACRG,MAAMC,QAAQH,IAEvBN,EAAUO,OAAOF,GAEjBC,EAAMF,SAAQ,SAAAM,GACZV,EAAUW,OAAON,EAAKK,EACvB,KAEDV,EAAUY,IAAIP,EAAKC,EAEtB,IAGIN,EAAUjD,UAClB,C,4CC/BY8D,EAA8B,SAAC,GAIrC,IAHLC,EAGI,EAHJA,SACAC,EAEI,EAFJA,OACGC,EACC,iBACJ,EAAuB1E,cAAhBC,EAAP,oBAEA,OACE,cAAC,IAAD,yBAIEK,GAAI,CACFE,OAAQ+C,EAActD,EAAcwE,KAElCC,GAPN,aASGF,IAGN,EC7BYG,EAAgB,WAC3B,MAAwC3E,cAAxC,mBAAOC,EAAP,KAAqB2E,EAArB,KACMpD,EAAQvB,EAAa4E,IAAI,UAAY,GACrCpD,EAAMxB,EAAa4E,IAAI,QAAU,GAEjCnD,EAAYzB,EAAa6E,OAAO,cAAgB,GAOhDC,EAAgB,SAACN,GACrB,IAAMjE,EAAS+C,EAActD,EAAcwE,GAE3CG,EAAgBpE,EACjB,EAcD,OACE,sBAAKN,UAAU,QAAf,UACE,mBAAGA,UAAU,gBAAb,qBAEA,oBAAGA,UAAU,aAAa,UAAQ,YAAlC,UACE,cAAC,EAAD,CACEuE,OAAQ,CAAEhD,IAAK,MACfvB,UAAYuB,EAAoB,GAAd,YAFpB,iBAMA,cAAC,EAAD,CACEgD,OAAQ,CAAEhD,IAAK,KACfvB,UAAmB,MAARuB,EAAc,YAAc,GAFzC,kBAMA,cAAC,EAAD,CACEgD,OAAQ,CAAEhD,IAAK,KACfvB,UAAmB,MAARuB,EAAc,YAAc,GAFzC,uBASF,qBAAKvB,UAAU,cAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACE,UAAQ,aACRA,UAAU,QACV8E,YAAY,SACZC,SA5CgB,SAACC,GACzBH,EAAc,CAAEvD,MAAO0D,EAAEC,OAAOnB,OAAS,MAC1C,EA2CSA,MAAOxC,IAGT,sBAAMtB,UAAU,eAAhB,SACE,mBAAGA,UAAU,gBAAgB,cAAY,gBAK/C,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,iCAAiC,UAAQ,gBAAxD,UACE,qBAAKA,UAAU,aAAf,SAtEa,CAAC,GAAI,GAAI,GAAI,GAAI,IAuEdkF,KAAI,SAAA/C,GAAO,OAEvB,aADA,CACA,UAEE,UAAQ,UACRnC,UAAWG,IAAW,cACpB,CAAE,UAAWqB,EAAUM,SAASK,EAAQ5B,cAC1C4E,QAAS,kBA5DC,SAACC,GACvB,IAAMC,EAAe7D,EAAUM,SAASsD,GACpC5D,EAAUE,QAAO,SAAA4D,GAAM,OAAIA,IAAWF,CAAf,IADN,sBAEb5D,GAFa,CAEF4D,IAEnBP,EAAc,CAAErD,UAAW6D,GAC5B,CAsD4BE,CAAgBpD,EAAQ5B,WAA9B,EALX,SAOG4B,GANIA,EAHgB,MAc3B,qBAAKnC,UAAU,mBAAf,SACE,cAAC,EAAD,CACEuE,OAAQ,CAAE/C,UAAW,MACrB,UAAQ,aACRxB,UAAWG,IAAW,oBACpB,CAAE,cAAoC,IAArBqB,EAAUS,SAJ/B,wBAYN,qBAAKjC,UAAU,cAAf,SACE,mBACEA,UAAU,0CACVwF,KAAK,WAFP,mCASP,EC5GYC,EAA8B,SAAC,GAAyB,IAAvB9D,EAAsB,EAAtBA,OAAQ+D,EAAc,EAAdA,QAC5CC,EAASC,cAATD,KACR,EAAuB7F,cAAhBC,EAAP,oBACM8F,EAAYH,EAAQI,MAAK,SAAAC,GAAM,OAAIA,EAAOnE,OAASD,EAAOK,UAA3B,IAC/BgE,EAAYN,EAAQI,MAAK,SAAAC,GAAM,OAAIA,EAAOnE,OAASD,EAAOI,UAA3B,IAErC,OACE,qBACE,UAAQ,SACR/B,UAAWG,IAAW,CAAE,yBAA0BwF,IAAShE,EAAOgE,OAFpE,UAIE,6BACE,cAAC,IAAD,CACEvF,GAAI,CAAEC,SAAS,MAAD,OAAQsB,EAAOgE,MAAQrF,OAAQP,EAAaQ,YAC1DP,UAAWG,IAAW,CAAE,kBAAkC,MAAfwB,EAAOJ,MAFpD,SAIGI,EAAOC,SAGZ,6BAAKD,EAAOJ,MACZ,6BAAKI,EAAOU,OACZ,6BAAKV,EAAOsE,OACVD,EAGA,6BACE,cAAC,IAAD,CACEhG,UAAU,kBACVI,GAAI,CAAEC,SAAS,MAAD,cAAQ2F,QAAR,IAAQA,OAAR,EAAQA,EAAWL,MAAQrF,OAAQP,EAAaQ,YAFhE,SAIGoB,EAAOI,YAAc,QAP1B,6BAAKJ,EAAOI,YAAc,MAW1B8D,EAGA,6BACE,cAAC,IAAD,CACEzF,GAAI,CAAEC,SAAS,MAAD,cAAQwF,QAAR,IAAQA,OAAR,EAAQA,EAAWF,MAAQrF,OAAQP,EAAaQ,YADhE,SAGGoB,EAAOK,YAAc,QAN1B,6BAAKL,EAAOK,YAAc,QAYjC,ECzDWkE,EAAZ,SAAYA,GAAZ,OAAYA,EAAZ,YAAYA,EAAZ,UAAYA,EAAZ,YAAYA,EAAZ,YAAYA,CAAZ,MCmBaC,EAA+B,SAAC,GAAiB,IAAfT,EAAc,EAAdA,QAC7C,EAAwC5F,cAAxC,mBAAOC,EAAP,KAAqB2E,EAArB,KACM7B,EAAO9C,EAAa4E,IAAI,SAAW,GACnCyB,EAAQrG,EAAa4E,IAAI,UAAY,GACrCE,EAAgB,SAACN,GACrB,IAAMjE,EAAS+C,EAActD,EAAcwE,GAE3CG,EAAgBpE,EACjB,EAEK+F,EAAc,SAACrB,GAA0C,IAAD,MAEtDsB,EAAQ,UADMtB,EAAEuB,cACOC,qBAAf,iBAAG,EAA2BA,qBAA9B,iBAAG,EAA0CC,mBAA7C,aAAG,EACb5E,oBAEJ,QAAQ,GACN,KAAKgB,IAASyD,EAGZ,OAFAzB,EAAc,CAAEhC,KAAMyD,GAAY,KAAMF,MAAO,OAExC,KAET,KAAKvD,IAASyD,GAAYI,QAAQN,GAGhC,OAFAvB,EAAc,CAAEhC,KAAM,KAAMuD,MAAO,OAE5B,KAET,KAAKvD,IAASyD,EAGZ,OAFAzB,EAAc,CAAEuB,MAAO,SAEhB,KAET,QACE,OAAO,KAEZ,EAED,OACE,mCACGV,EAAQzD,OAAS,GAChB,wBACE,UAAQ,cACRjC,UAAU,uDAFZ,UAIE,gCACE,+BACG0D,OAAOiD,OAAOT,GAAahB,KAAI,SAAC0B,GAAD,OAC9B,6BACE,uBAAM5G,UAAU,8BAAhB,UACG4G,EACD,sBAAMC,MAAO,CAAEC,MAAO,UAAWC,OAAQ,WAAzC,SACE,sBAAM/G,UAAU,OAAOmF,QAASkB,EAAhC,SACE,mBAAGrG,UAAWG,IAAW,MAAO,CAC9B,UAAW0C,IAAS+D,EAAG/E,oBACvB,aAAcgB,IAAS+D,EAAG/E,sBACpBuE,EACN,eAAgBA,GACXvD,IAAS+D,EAAG/E,gCAVlB+E,EADqB,IAoBhC,wCACA,6CAGJ,gCACGlB,EAAQR,KAAI,SAACvD,GAAD,OACX,cAAC,EAAD,CAAYA,OAAQA,EAAQ+D,QAASA,GAAc/D,EAAOC,KAD/C,UAQxB,ECrFYoF,EAAa,WACxB,MAA6BC,mBAAmB,IAAhD,mBAAO5F,EAAP,KAAe6F,EAAf,KACA,EAA0CD,mBAAmB,IAA7D,mBAAOE,EAAP,KAAsBC,EAAtB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KAEA,EAAuB1H,cAAhBC,EAAP,oBACMuB,EAAQvB,EAAa4E,IAAI,UAAY,GACrCpD,EAAMxB,EAAa4E,IAAI,QAAU,GACjCnD,GAAazB,EAAa6E,OAAO,cAAgB,IACpDM,KAAI,SAAAuC,GAAG,OAAKA,CAAL,IACJ5E,EAAO9C,EAAa4E,IAAI,SAAW,GACnCyB,EAAQrG,EAAa4E,IAAI,UAAY,GAuB3C,OArBA+C,qBAAU,WACRF,GAAa,GACbF,GAAW,GAEX5G,IACGK,MAAK,SAAA4G,GACJT,EAAWS,GACXP,EAAiB5E,EAAgBpB,EAC/BuG,EAAKrG,EAAOC,EAAKC,GAChBqB,EAAMuD,GACV,IACAwB,OAAM,kBAAMN,GAAW,EAAjB,IACNO,SAAQ,kBAAML,GAAa,EAAnB,GACZ,GAAE,IAEHE,qBAAU,WACR,IAAMI,EAAiB1G,EAAkBC,EAAQC,EAAOC,EAAKC,GAE7D4F,EAAiB5E,EAAgBsF,EAAgBjF,EAAMuD,GACxD,GAAE,CAACrG,IAGF,qCACE,oBAAIC,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,mDAAf,WACIuH,GACA,qBAAKvH,UAAU,uCAAf,SACE,cAAC,EAAD,MAIJ,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,sBAAf,SACGuH,EAAY,cAAC,EAAD,IACX,qCACGF,GACC,mBAAG,UAAQ,qBAAX,mCAGAA,GAA6B,IAAlBhG,EAAOY,QAClB,mBAAG,UAAQ,kBAAX,gDAKAoF,GAAoC,IAAzBF,EAAclF,QACzB,yFAKF,cAAC,EAAD,CAAayD,QAASyB,kBAUvC,EC3EYY,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UAEE,cAAC,EAAD,IAEA,sBAAM/H,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgI,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAU7H,GAAG,IAAI8H,SAAO,MACrD,cAAC,IAAD,CAAOF,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAZ,SACE,cAAC,IAAD,CAAOA,KAAK,SAASC,QAAS,cAAC,EAAD,QAGhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,eAdhB,ECNnBE,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.3f38ce6d.chunk.js","sourcesContent":["import { NavLink, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Navbar = () => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => classNames('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to={{ pathname: '/people', search: searchParams.toString() }}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const ErrorPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../types';\nimport { getCentury } from './convertCentury';\n\nexport const getFilteredPeople = (\n  people: Person[],\n  query: string,\n  sex: string,\n  centuries: number[],\n): Person[] => {\n  const filter1 = people\n    .filter(person => person.name.toLocaleLowerCase()\n      .includes(query.toLocaleLowerCase())\n      || person.motherName?.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase())\n      || person.fatherName?.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase()))\n    .filter(person => person.sex.includes(sex));\n\n  if (centuries.length) {\n    return centuries.flatMap(century => filter1\n      .filter(person => getCentury(person.born) === century));\n  }\n\n  return filter1;\n};\n","export const getCentury = (year: number) => {\n  if (year === 1) {\n    return 0;\n  }\n\n  return Math.ceil(year / 100);\n};\n","/* eslint-disable no-else-return */\nimport { Person } from '../types';\n\nexport const getSortedPeople = (\n  people: Person[],\n  sortName: string,\n  direction: null | string = null,\n) => {\n  const sortByNumber = (arr: Person[], sortN: string, dir: null | string) => {\n    if (dir) {\n      return [...arr].sort((n1, n2) => (n2[sortN] as number)\n      - (n1[sortN] as number));\n    } else {\n      return [...arr].sort((n1, n2) => (n1[sortN] as number)\n        - (n2[sortN] as number));\n    }\n  };\n\n  const sortByString = (arr: Person[], sortN: string, dir: null | string) => {\n    if (dir) {\n      return [...arr].sort((s1, s2) => (s2[sortN] as string)\n        .localeCompare((s1[sortN] as string)));\n    } else {\n      return [...arr].sort((s1, s2) => (s1[sortN] as string)\n        .localeCompare((s2[sortN] as string)));\n    }\n  };\n\n  switch (sortName) {\n    case 'name':\n    case 'sex':\n      return sortByString(people, sortName, direction);\n\n    case 'born':\n    case 'died':\n      return sortByNumber(people, sortName, direction);\n\n    default:\n      return people;\n  }\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuriesArr = [16, 17, 18, 19, 20];\n  const centuries = searchParams.getAll('centuries') || [];\n\n  type Params = {\n    query?: string | null,\n    centuries?: string[],\n  };\n\n  const setSearchWith = (params: Params) => {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  };\n\n  const handleQueryChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchWith({ query: e.target.value || null });\n  };\n\n  const toggleCenturies = (ch: string) => {\n    const newCenturies = centuries.includes(ch)\n      ? centuries.filter(letter => letter !== ch)\n      : [...centuries, ch];\n\n    setSearchWith({ centuries: newCenturies });\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          params={{ sex: null }}\n          className={!sex ? 'is-active' : ''}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          params={{ sex: 'm' }}\n          className={sex === 'm' ? 'is-active' : ''}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          params={{ sex: 'f' }}\n          className={sex === 'f' ? 'is-active' : ''}\n\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={handleQueryChange}\n            value={query}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuriesArr.map(century => (\n              // eslint-disable-next-line react/button-has-type\n              <button\n                key={century}\n                data-cy=\"century\"\n                className={classNames('button mr-1',\n                  { 'is-info': centuries.includes(century.toString()) })}\n                onClick={() => toggleCenturies(century.toString())}\n              >\n                {century}\n              </button>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              params={{ centuries: null }}\n              data-cy=\"centuryALL\"\n              className={classNames('button is-success',\n                { 'is-outlined': centuries.length !== 0 })}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <a\n          className=\"button is-link is-outlined is-fullwidth\"\n          href=\"#/people\"\n        >\n          Reset all filters\n        </a>\n      </div>\n    </nav>\n  );\n};\n","import { NavLink, useParams, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  peoples: Person[],\n};\n\nexport const PersonLink: React.FC<Props> = ({ person, peoples }) => {\n  const { slug } = useParams();\n  const [searchParams] = useSearchParams();\n  const hasFather = peoples.find(parent => parent.name === person.fatherName);\n  const hasMather = peoples.find(parent => parent.name === person.motherName);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({ 'has-background-warning': slug === person.slug })}\n    >\n      <td>\n        <NavLink\n          to={{ pathname: `../${person.slug}`, search: searchParams.toString() }}\n          className={classNames({ 'has-text-danger': person.sex === 'f' })}\n        >\n          {person.name}\n        </NavLink>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      {!hasMather ? (\n        <td>{person.motherName || '-'}</td>\n      ) : (\n        <td>\n          <NavLink\n            className=\"has-text-danger\"\n            to={{ pathname: `../${hasMather?.slug}`, search: searchParams.toString() }}\n          >\n            {person.motherName || '-'}\n          </NavLink>\n        </td>\n      )}\n      {!hasFather ? (\n        <td>{person.fatherName || '-'}</td>\n      ) : (\n        <td>\n          <NavLink\n            to={{ pathname: `../${hasFather?.slug}`, search: searchParams.toString() }}\n          >\n            {person.fatherName || '-'}\n          </NavLink>\n        </td>\n      )}\n    </tr>\n  );\n};\n\nexport default PersonLink;\n","export enum TableTitles {\n  Name = 'Name',\n  Sex = 'Sex',\n  Born = 'Born',\n  Died = 'Died',\n}\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\nimport { PersonLink } from './PersonLink';\nimport { TableTitles } from '../enums/tableTitles';\nimport { getSearchWith } from '../utils/searchHelper';\n\ntype Props = {\n  peoples: Person[],\n};\n\ntype Params = {\n  sort?: string | null,\n  order: 'desc' | null,\n};\n\nexport const PeopleTable: React.FC<Props> = ({ peoples }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n  const setSearchWith = (params: Params) => {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  };\n\n  const handleClick = (e: React.MouseEvent<HTMLSpanElement>) => {\n    const spanElement = e.currentTarget;\n    const parentEl = spanElement.parentElement?.parentElement?.textContent\n      ?.toLocaleLowerCase();\n\n    switch (true) {\n      case sort !== parentEl:\n        setSearchWith({ sort: parentEl || null, order: null });\n\n        return null;\n\n      case sort === parentEl && Boolean(order):\n        setSearchWith({ sort: null, order: null });\n\n        return null;\n\n      case sort === parentEl:\n        setSearchWith({ order: 'desc' });\n\n        return null;\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <>\n      {peoples.length > 0 && (\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              {Object.values(TableTitles).map((el) => (\n                <th key={el}>\n                  <span className=\"is-flex is-flex-wrap-nowrap\">\n                    {el}\n                    <span style={{ color: '#485FC7', cursor: 'pointer' }}>\n                      <span className=\"icon\" onClick={handleClick}>\n                        <i className={classNames('fas', {\n                          'fa-sort': sort !== el.toLocaleLowerCase(),\n                          'fa-sort-up': sort === el.toLocaleLowerCase()\n                            && !order,\n                          'fa-sort-down': order\n                            && sort === el.toLocaleLowerCase(),\n                        })}\n                        />\n                      </span>\n                    </span>\n                  </span>\n                </th>\n              ))}\n\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n          <tbody>\n            {peoples.map((person) => (\n              <PersonLink person={person} peoples={peoples} key={person.name} />\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from '../components/Loader';\nimport { getFilteredPeople } from '../utils/filteredPeople';\nimport { getSortedPeople } from '../utils/sortedPeople';\n\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeoples] = useState<Person[]>([]);\n  const [visiblePeople, setVisiblePeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query') || '';\n  const sex = searchParams.get('sex') || '';\n  const centuries = (searchParams.getAll('centuries') || [])\n    .map(num => +num);\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getPeople()\n      .then(res => {\n        setPeoples(res);\n        setVisiblePeople(getSortedPeople(getFilteredPeople(\n          res, query, sex, centuries,\n        ), sort, order));\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  useEffect(() => {\n    const filteredPeople = getFilteredPeople(people, query, sex, centuries);\n\n    setVisiblePeople(getSortedPeople(filteredPeople, sort, order));\n  }, [searchParams]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {!isLoading && (\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n          )}\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading ? <Loader /> : (\n                <>\n                  {isError && (\n                    <p data-cy=\"peopleLoadingError\">Something went wrong</p>\n                  )}\n\n                  {!isError && people.length === 0 && (\n                    <p data-cy=\"noPeopleMessage\">\n                      There are no people on the server\n                    </p>\n                  )}\n\n                  {!isError && visiblePeople.length === 0 && (\n                    <p>\n                      There are no people matching the current search criteria\n                    </p>\n                  )}\n\n                  <PeopleTable peoples={visiblePeople} />\n                </>\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport './App.scss';\n\nimport { Navbar } from './components/Navbar';\n\nimport { HomePage } from './pages/HomePage';\nimport { ErrorPage } from './pages/ErrorPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\">\n            <Route path=\":slug?\" element={<PeoplePage />} />\n\n          </Route>\n          <Route path=\"*\" element={<ErrorPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}